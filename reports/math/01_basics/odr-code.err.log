Traceback (most recent call last):
  File "E:\Python\physics-python-and-pi\venv\Lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\Python\physics-python-and-pi\venv\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "E:\Python\physics-python-and-pi\venv\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "E:\Python\physics-python-and-pi\venv\Lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\Vladyslav\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "E:\Python\physics-python-and-pi\venv\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "E:\Python\physics-python-and-pi\venv\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "E:\Python\physics-python-and-pi\venv\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
output = results['odr_output']
fit_params = results['fit_params']
std_errs = results['std_errs']
t_values = results['t_values']
p_values = results['p_values']
n = results['number_of_observations']
p = results['number_of_parameters']

print("--- ODR Fit Results ---")
output.pprint()

print("\n--- Summary of Results ---")
for i, (param, err) in enumerate(zip(fit_params, std_errs)):
    print(f"Parameter {chr(ord('A') + i)}: {param:.5f} +/- {err:.5f}")
    print(f"  T-value: {t_values[i]:.8f}, P-value: {p_values[i]:.8f}")

print("\n--- Model Fit Statistics ---")
print(f"\nNumber of Observations (n): {n}")
print(f"Number of Parameters (p): {p}")
print(f"Degrees of Freedom (n-p): {results['degrees_of_freedom']}")

print("\n--- Goodness-of-Fit & Error Metrics ---")
print(f"Chi-Squared (from ODR): {results['chi_squared_odr']:.4f}")
print(f"Chi-Squared (manual): {results['chi_squared_manual']:.4f}")
print(f"Reduced Chi-Squared (from ODR): {results['reduced_chi_squared_odr']:.4f}")
print(f"Reduced Chi-Squared (manual): {results['reduced_chi_squared_manual']:.4f}")
print(f"Unweighted R-squared: {results['r_squared_unweighted']:.4f}")

print("\n--- Information Criteria ---")
print(f"Maximum Log-Likelihood: {results['log_likelihood']:.4f}")
print(f"AIC (Akaike Information Criterion): {results['aic']:.4f}")
print(f"BIC (Bayesian Information Criterion): {results['bic']:.4f}")
print(f"AICc (Corrected AIC): {results['aicc']:.4f}")
------------------

----- stdout -----
--- ODR Fit Results ---
Beta: [5.67694275e+01 9.88335260e-03]
Beta Std Error: [4.26741666e-01 2.63972932e-04]
Beta Covariance: [[ 2.41744445e-01 -1.18588964e-04]
 [-1.18588964e-04  9.25007382e-08]]
Residual Variance: 0.7533097575791786
Inverse Condition #: 0.17698951436366908
Reason(s) for Halting:
  Sum of squares convergence

--- Summary of Results ---
Parameter A: 56.76943 +/- 0.42674
  T-value: 133.02996178, P-value: 0.00000000
Parameter B: 0.00988 +/- 0.00026
  T-value: 37.44078054, P-value: 0.00000026

--- Model Fit Statistics ---

Number of Observations (n): 7
Number of Parameters (p): 2
Degrees of Freedom (n-p): 5

--- Goodness-of-Fit & Error Metrics ---
Chi-Squared (from ODR): 3.7665
Chi-Squared (manual): 3.7665
Reduced Chi-Squared (from ODR): 0.7533
Reduced Chi-Squared (manual): 0.7533
------------------

[31m---------------------------------------------------------------------------[39m
[31mKeyError[39m                                  Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[14][39m[32m, line 27[39m
[32m     25[39m [38;5;28mprint[39m([33mf[39m[33m"[39m[33mReduced Chi-Squared (from ODR): [39m[38;5;132;01m{[39;00mresults[[33m'[39m[33mreduced_chi_squared_odr[39m[33m'[39m][38;5;132;01m:[39;00m[33m.4f[39m[38;5;132;01m}[39;00m[33m"[39m)
[32m     26[39m [38;5;28mprint[39m([33mf[39m[33m"[39m[33mReduced Chi-Squared (manual): [39m[38;5;132;01m{[39;00mresults[[33m'[39m[33mreduced_chi_squared_manual[39m[33m'[39m][38;5;132;01m:[39;00m[33m.4f[39m[38;5;132;01m}[39;00m[33m"[39m)
[32m---> [39m[32m27[39m [38;5;28mprint[39m([33mf[39m[33m"[39m[33mUnweighted R-squared: [39m[38;5;132;01m{[39;00m[43mresults[49m[43m[[49m[33;43m'[39;49m[33;43mr_squared_unweighted[39;49m[33;43m'[39;49m[43m][49m[38;5;132;01m:[39;00m[33m.4f[39m[38;5;132;01m}[39;00m[33m"[39m)
[32m     29[39m [38;5;28mprint[39m([33m"[39m[38;5;130;01m\n[39;00m[33m--- Information Criteria ---[39m[33m"[39m)
[32m     30[39m [38;5;28mprint[39m([33mf[39m[33m"[39m[33mMaximum Log-Likelihood: [39m[38;5;132;01m{[39;00mresults[[33m'[39m[33mlog_likelihood[39m[33m'[39m][38;5;132;01m:[39;00m[33m.4f[39m[38;5;132;01m}[39;00m[33m"[39m)

[31mKeyError[39m: 'r_squared_unweighted'

